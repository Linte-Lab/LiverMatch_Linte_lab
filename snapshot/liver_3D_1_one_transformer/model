KPFCNN(
  (encoder_blocks): ModuleList(
    (0): SimpleBlock(
      (KPConv): KPConv(radius: 0.06, extent: 0.05, in_feat: 1, out_feat: 64)
      (batch_norm): BatchNormBlock(in_feat: 64, momentum: 0.020, only_bias: False)
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (1): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 64, out_feat: 32, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.06, extent: 0.05, in_feat: 32, out_feat: 32)
      (batch_norm_conv): BatchNormBlock(in_feat: 32, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 32, out_feat: 128, BN: True, ReLU: False)
      (unary_shortcut): UnaryBlock(in_feat: 64, out_feat: 128, BN: True, ReLU: False)
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (2): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 128, out_feat: 32, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.06, extent: 0.05, in_feat: 32, out_feat: 32)
      (batch_norm_conv): BatchNormBlock(in_feat: 32, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 32, out_feat: 128, BN: True, ReLU: False)
      (unary_shortcut): Identity()
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (3): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 128, out_feat: 64, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.12, extent: 0.10, in_feat: 64, out_feat: 64)
      (batch_norm_conv): BatchNormBlock(in_feat: 64, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 64, out_feat: 256, BN: True, ReLU: False)
      (unary_shortcut): UnaryBlock(in_feat: 128, out_feat: 256, BN: True, ReLU: False)
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (4): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 256, out_feat: 64, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.12, extent: 0.10, in_feat: 64, out_feat: 64)
      (batch_norm_conv): BatchNormBlock(in_feat: 64, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 64, out_feat: 256, BN: True, ReLU: False)
      (unary_shortcut): Identity()
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (5): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 256, out_feat: 64, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.12, extent: 0.10, in_feat: 64, out_feat: 64)
      (batch_norm_conv): BatchNormBlock(in_feat: 64, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 64, out_feat: 256, BN: True, ReLU: False)
      (unary_shortcut): Identity()
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (6): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 256, out_feat: 128, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.25, extent: 0.20, in_feat: 128, out_feat: 128)
      (batch_norm_conv): BatchNormBlock(in_feat: 128, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 128, out_feat: 512, BN: True, ReLU: False)
      (unary_shortcut): UnaryBlock(in_feat: 256, out_feat: 512, BN: True, ReLU: False)
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (7): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 512, out_feat: 128, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.25, extent: 0.20, in_feat: 128, out_feat: 128)
      (batch_norm_conv): BatchNormBlock(in_feat: 128, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 128, out_feat: 512, BN: True, ReLU: False)
      (unary_shortcut): Identity()
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (8): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 512, out_feat: 128, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.25, extent: 0.20, in_feat: 128, out_feat: 128)
      (batch_norm_conv): BatchNormBlock(in_feat: 128, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 128, out_feat: 512, BN: True, ReLU: False)
      (unary_shortcut): Identity()
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (9): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 512, out_feat: 256, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.50, extent: 0.40, in_feat: 256, out_feat: 256)
      (batch_norm_conv): BatchNormBlock(in_feat: 256, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 256, out_feat: 1024, BN: True, ReLU: False)
      (unary_shortcut): UnaryBlock(in_feat: 512, out_feat: 1024, BN: True, ReLU: False)
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
    (10): ResnetBottleneckBlock(
      (unary1): UnaryBlock(in_feat: 1024, out_feat: 256, BN: True, ReLU: True)
      (KPConv): KPConv(radius: 0.50, extent: 0.40, in_feat: 256, out_feat: 256)
      (batch_norm_conv): BatchNormBlock(in_feat: 256, momentum: 0.020, only_bias: False)
      (unary2): UnaryBlock(in_feat: 256, out_feat: 1024, BN: True, ReLU: False)
      (unary_shortcut): Identity()
      (leaky_relu): LeakyReLU(negative_slope=0.1)
    )
  )
  (bottle): Conv1d(1024, 384, kernel_size=(1,), stride=(1,))
  (transformer): Transformer(
    (layers): ModuleList(
      (0): Layer(
        (q_proj): Linear(in_features=384, out_features=384, bias=False)
        (k_proj): Linear(in_features=384, out_features=384, bias=False)
        (v_proj): Linear(in_features=384, out_features=384, bias=False)
        (merge): Linear(in_features=384, out_features=384, bias=False)
        (mlp): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=768, out_features=384, bias=False)
        )
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
      )
      (1): Layer(
        (q_proj): Linear(in_features=384, out_features=384, bias=False)
        (k_proj): Linear(in_features=384, out_features=384, bias=False)
        (v_proj): Linear(in_features=384, out_features=384, bias=False)
        (merge): Linear(in_features=384, out_features=384, bias=False)
        (mlp): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=768, out_features=384, bias=False)
        )
        (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (matching): Matching(
    (src_proj): Linear(in_features=34, out_features=34, bias=False)
    (tgt_proj): Linear(in_features=34, out_features=34, bias=False)
  )
  (proj_vis_score): Conv1d(34, 1, kernel_size=(1,), stride=(1,))
  (proj_match_score): Conv1d(34, 1, kernel_size=(1,), stride=(1,))
  (decoder_blocks): ModuleList(
    (0): NearestUpsampleBlock(layer: 3 -> 2)
    (1): UnaryBlock(in_feat: 896, out_feat: 192, BN: True, ReLU: True)
    (2): NearestUpsampleBlock(layer: 2 -> 1)
    (3): UnaryBlock(in_feat: 448, out_feat: 96, BN: True, ReLU: True)
    (4): NearestUpsampleBlock(layer: 1 -> 0)
    (5): LastUnaryBlock(in_feat: 224, out_feat: 34)
  )
)